const uint32_t cc256x_init_script_size = 196;
const uint8_t  cc256x_init_script[] = {
	//HCI_VS_Start_VS_Lock (6)
	0x01, 0x37 ,0xFE ,0x02 ,0x07 ,0x10,

	// patch
	
	// .... many bytes of data not here yet .....

	// unknown (possibly write patch to mem done command? (24)
	//0x01, 0x83, 0xFF, 0x14, 0x79, 0x7B, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
 
	// HCI_VS_Sleep_Mode_Configurations	(13)
	0x01, 0x0C, 0xFD, 0x09, 0x01, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x00,

	// HCI_VS_Read_Modify_Write_Hardware_Register (12)
	0x01, 0x09, 0xFD, 0x08, 0x58, 0x60, 0x1A, 0x00, 0x00, 0x10, 0x00, 0x10,
	
	// HCI_VS_Read_Modify_Write_Hardware_Register (12)
	0x01, 0x09, 0xFD, 0x08, 0x10, 0x60, 0x1A, 0x00, 0x10, 0x00, 0x10, 0x00,
	
	// unknown (53)
	0x01, 0x76, 0xFD, 0x31, 0x01, 0x21, 0x54, 0x00, 0x00, 0x61, 0x57, 0x00, 0x00, 0x14, 0x05, 0x0A, 0x05, 0x00, 0x07, 0x06, 0x0A, 0x04, 0x05, 0x08, 0x09, 
	0x0B, 0x0C, 0x0D, 0x0E, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 
	0x00, 0x00, 0x00,

	//HCI_VS_DRPb_Enable_RF_Calibration (10)
	0x01, 0x80, 0xFD, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
	
	//HCI_VS_DRPb_Enable_RF_Calibration (10)
	0x01, 0x80, 0xFD, 0x06, 0x3C, 0xF0, 0x5F, 0x00, 0x00, 0x00,
	
	// HCI_VS_ Fast_Clock_Configuration_btip (24)
	0x01, 0x1C, 0xFD, 0x14, 0xFF, 0x88, 0x13, 0x00, 0x00, 0xD0, 0x07, 0x00, 0x00, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0xFA, 0x00, 0x00 ,0x00, 0x00,

	// HCI_VS_Stop_VS_Lock (4)
	0x01, 0x38, 0xFE, 0x00,

	// HCI_VS_ Fast_Clock_Configuration_btip (24)
	0x01, 0x1C, 0xFD, 0x14, 0x01, 0x88, 0x13, 0x00, 0x00, 0xD0, 0x07, 0x00, 0x00, 0xFF, 0xFF, 0x04, 0xFF, 0xFF, 0xFF, 0xFA, 0x00, 0x00, 0x00, 0x00,

	// HCI_VS_LE_Enable (6)
	0x01, 0x5B, 0xFD, 0x02, 0x01, 0x01,

	// HCI_VS_HCILL_Parameters (9)
	0x01, 0x2B, 0xFD, 0x05, 0x40, 0x00, 0x40, 0x01, 0x96,

	// HCI_VS_Sleep_Mode_Configurations (13)
	0x01, 0x0C, 0xFD, 0x09, 0x01, 0x01, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00

};
