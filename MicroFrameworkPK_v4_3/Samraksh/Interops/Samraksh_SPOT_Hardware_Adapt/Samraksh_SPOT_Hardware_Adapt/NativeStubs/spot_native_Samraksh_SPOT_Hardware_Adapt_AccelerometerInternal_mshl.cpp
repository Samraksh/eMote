//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#include "spot_native.h"
#include "spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal.h"

using namespace Samraksh::SPOT::Hardware::Adapt;


HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_Init___I2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_Init( pMngObj,  hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_GetX___I2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_GetX( pMngObj,  hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_GetY___I2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_GetY( pMngObj,  hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_GetZ___I2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_GetZ( pMngObj,  hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_GetTemperature___I2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_GetTemperature( pMngObj,  hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_reset___I2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_reset( pMngObj,  hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_advconfig___I2__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 1, param0 ) );

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_advconfig( pMngObj,  param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_SelfTest___I2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_SelfTest( pMngObj,  hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_SetPowerMode___I2__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 1, param0 ) );

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_SetPowerMode( pMngObj,  param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_SetBandwidth___I2__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 1, param0 ) );

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_SetBandwidth( pMngObj,  param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_SetRange___I2__U2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        UINT16 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT16( stack, 1, param0 ) );

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_SetRange( pMngObj,  param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_Raw_Read___U2__U2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        UINT16 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT16( stack, 1, param0 ) );

        UINT16 retVal = AccelerometerInternal::ADAPT_Accel_Raw_Read( pMngObj,  param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_spot_native_Samraksh_SPOT_Hardware_Adapt_AccelerometerInternal::ADAPT_Accel_Raw_Write___I2__U1__U2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_HeapBlock* pMngObj = Interop_Marshal_RetrieveManagedObject( stack );

        FAULT_ON_NULL(pMngObj);

        UINT8 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8( stack, 1, param0 ) );

        UINT16 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT16( stack, 2, param1 ) );

        INT16 retVal = AccelerometerInternal::ADAPT_Accel_Raw_Write( pMngObj,  param0, param1, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT16( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}
