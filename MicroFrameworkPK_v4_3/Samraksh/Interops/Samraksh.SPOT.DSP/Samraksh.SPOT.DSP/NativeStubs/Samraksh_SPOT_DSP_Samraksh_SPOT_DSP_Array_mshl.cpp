//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#include "Samraksh_SPOT_DSP.h"
#include "Samraksh_SPOT_DSP_Samraksh_SPOT_DSP_Array.h"

using namespace Samraksh::SPOT::DSP;


HRESULT Library_Samraksh_SPOT_DSP_Samraksh_SPOT_DSP_Array::DataEqualance___STATIC__BOOLEAN__SZARRAY_U1__SZARRAY_U1( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_TypedArray_UINT8 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        INT8 retVal = Array::DataEqualance( param0, param1, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT8( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Samraksh_SPOT_DSP_Samraksh_SPOT_DSP_Array::DataEqualance___STATIC__BOOLEAN__SZARRAY_U2__SZARRAY_U2( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_TypedArray_UINT16 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT16_ARRAY( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT16 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT16_ARRAY( stack, 1, param1 ) );

        INT8 retVal = Array::DataEqualance( param0, param1, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT8( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Samraksh_SPOT_DSP_Samraksh_SPOT_DSP_Array::DataEqualance___STATIC__BOOLEAN__SZARRAY_U4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_TypedArray_UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT32 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 1, param1 ) );

        INT8 retVal = Array::DataEqualance( param0, param1, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT8( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Samraksh_SPOT_DSP_Samraksh_SPOT_DSP_Array::DataEqualance___STATIC__BOOLEAN__SZARRAY_U8__SZARRAY_U8( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        CLR_RT_TypedArray_UINT64 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT64_ARRAY( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT64 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT64_ARRAY( stack, 1, param1 ) );

        INT8 retVal = Array::DataEqualance( param0, param1, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT8( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}
