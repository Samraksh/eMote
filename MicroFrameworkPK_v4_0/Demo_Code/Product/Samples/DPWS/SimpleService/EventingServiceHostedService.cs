//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     .NET Micro Framework MFSvcUtil.Exe
//     Runtime Version:2.0.00001.0001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Text;
using System.Xml;
using Dpws.Device;
using Dpws.Device.Services;
using Ws.Services;
using Ws.Services.WsaAddressing;
using Ws.Services.Xml;

namespace schemas.example.org.EventingService
{
    
    
    public class EventingService : DpwsHostedService
    {
        
        public EventingService()
        {

            // Set base service properties
            ServiceNamespace = new WsXmlNamespace("eve", "http://schemas.example.org/EventingService");
            ServiceID = "urn:uuid:02150611-88dd-4ea2-8260-629b725e230c";
            ServiceTypeName = "EventingService";

            // Add service types here

            // Add event sources here
            EventSources.Add(new DpwsWseEventSource("eve", "http://schemas.example.org/EventingService", "SimpleEvent"));
            EventSources.Add(new DpwsWseEventSource("eve", "http://schemas.example.org/EventingService", "IntegerEvent"));
        }
        
        public virtual void SimpleEvent(SimpleEvent eventReq)
        {

            // Create temp event source object, set the event action and create the event header
            DpwsWseEventSource eventSource;
            eventSource = EventSources["SimpleEvent"];
            String action;
            action = "http://schemas.example.org/EventingService/SimpleEvent";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, null, null, null, null);

            // Create event serializer and write the event object
            SimpleEventDataContractSerializer eventDcs;
            eventDcs = new SimpleEventDataContractSerializer("SimpleEvent", "http://schemas.example.org/EventingService");

            // Build event body message
            byte[] soapBuffer = SoapMessageBuilder.BuildEventBody(header, eventDcs, eventReq);

            // Fire event
            string soapMessage = new string(Encoding.UTF8.GetChars(soapBuffer));
            Dpws.Device.Device.SubscriptionManager.FireEvent(this, eventSource, header, soapMessage);
        }
        
        public virtual void IntegerEvent(IntegerEvent eventReq)
        {

            // Create temp event source object, set the event action and create the event header
            DpwsWseEventSource eventSource;
            eventSource = EventSources["IntegerEvent"];
            String action;
            action = "http://schemas.example.org/EventingService/IntegerEvent";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, null, null, null, null);

            // Create event serializer and write the event object
            IntegerEventDataContractSerializer eventDcs;
            eventDcs = new IntegerEventDataContractSerializer("IntegerEvent", "http://schemas.example.org/EventingService");

            // Build event body message
            byte[] soapBuffer = SoapMessageBuilder.BuildEventBody(header, eventDcs, eventReq);

            // Fire event
            string soapMessage = new string(Encoding.UTF8.GetChars(soapBuffer));
            Dpws.Device.Device.SubscriptionManager.FireEvent(this, eventSource, header, soapMessage);
        }
    }
}
