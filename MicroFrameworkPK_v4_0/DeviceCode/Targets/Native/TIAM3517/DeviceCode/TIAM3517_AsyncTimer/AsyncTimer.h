//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#ifndef _ASYNCTIMER_H_
#define _ASYNCTIMER_H_

#include <TinyCLR_Interop.h>

void ISR_SoftInterrupt_Handler(void* Param);
/*void ISR_ASYNC_TIMER(void* Param );
static void ISR_AsyncTimerProc( CLR_RT_HeapBlock_NativeEventDispatcher *pContext );
static HRESULT CleanupAsyncTimerDriver( CLR_RT_HeapBlock_NativeEventDispatcher *pContext );
static HRESULT EnableDisableAsyncTimerDriver( CLR_RT_HeapBlock_NativeEventDispatcher *pContext, bool fEnable );
static HRESULT InitializeAsyncTimerDriver( CLR_RT_HeapBlock_NativeEventDispatcher *pContext, UINT64 userData );
*/

struct Library_AsyncTimer_Microsoft_SPOT_Interop_AsyncTimer
{
    TINYCLR_NATIVE_DECLARE(GenerateInterrupt___STATIC__VOID);

    //--//

};

extern const CLR_RT_NativeAssemblyData g_CLR_AssemblyNative_AsyncTimer;
extern const CLR_RT_NativeAssemblyData g_CLR_AssemblyNative_AsyncInteropTimer;


/*const CLR_RT_NativeAssemblyData g_CLR_AssemblyNative_AsyncTimer =
{
    "AsyncTimer",
    0x942D0E14,
    method_lookup
};
*/


#endif  //_ASYNCTIMER_H_
