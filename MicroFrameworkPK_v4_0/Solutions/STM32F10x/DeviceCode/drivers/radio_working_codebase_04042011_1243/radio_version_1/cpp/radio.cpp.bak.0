/*

Fill program information here

FIXME - 

*/

#include "radio.h"


radio :: radio () 
{
	/* Initialize private members of the radio object here */	
}


/*
*
radio :: radio (int& src_add, int& time_out, int& radio_chnl, int& radio_pwr, int& radio_freq) 
{
	// Parameterized constructor, Initialize radio to these parameters presented 
}

*/


BOOL radio :: radio_initialize () 
{
	/*
	- Pull RST line low
	- SLP_TR low
	- 6uS later pull it high again and the reset is finished
	- After this all registers will be in default state
	- The state machine will be in P_ON or TRX_OFF state
	- TRX_OFF command is written to the TRX_STATE. TRX_CMD sub register to ensure a transition from P_ON to TRX_OFF.
	- Set interupt mask, since interrupts were disabled during hardware reset		
	*/
	
	return true;
}


BOOL radio :: radio_uninitialize () 
{
	return true;
}

BOOL radio :: radio_hardware_reset () 
{
	/* 	
	- Assert RST low
	- SLP_TR low 
	- Wait for 6uS
	- RST High 			
	*/

	return true;
}


BOOL radio :: radio_sync_send () 
{
	return true;
}

BOOL radio :: radio_async_send () 
{
	return true;
}

BOOL radio :: radio_sync_recv () 
{
	return true;
}

BOOL radio :: radio_async_recv () 
{
	return true;
}

BOOL radio :: radio_build_frame ()
{ 
	return true;
}

BOOL radio :: radio_parse_frame ()
{
	return true;
}

