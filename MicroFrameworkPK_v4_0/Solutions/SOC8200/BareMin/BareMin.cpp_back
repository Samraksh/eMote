////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Microsoft Corporation.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//#include <tinyhal.h>
//#include <Tests.h>
#include "BareMin.h"
#include <stdio.h>

// HAL_DECLARE_NULL_HEAP();

// void PostManagedEvent( UINT8 category, UINT8 subCategory, UINT16 data1, UINT32 data2 )
// {


// }
extern int my_hello();

void ApplicationEntryPoint();

extern "C"{
int myEntry(){

	my_hello();
	return 10;
}
}

/*
void my_CPU_GPIO_SetPinState(GPIO_PIN pin, BOOL iniState)
{
	

}
*/

void ApplicationEntryPoint()
{
//asm("EntryPoint:");
	 int i = 0;
	 int j = 0;
//    BOOL result;

    //RAM         RamTest    ( (UINT32*)RAMTestBase, (UINT32)RAMTestSize, (ENDIAN_TYPE)ENDIANESS, BUS_WIDTH );
    //TimedEvents eventsTest;
    //UART        usartTest  ( COMTestPort, 9600, USART_PARITY_NONE, 8, USART_STOP_BITS_ONE, USART_FLOW_NONE ); 	
    //GPIO        gpioTest   ( GPIOTestPin );   
    //SPI         spiTest    ( SPIChipSelect, SPIModule, g_EEPROM_STM95x );
    //Timers      timersTest ( DisplayInterval, TimerDuration );

    //GPIO_PIN g = 58;

    //CPU_GPIO_EnableOutputPin(g,false);
    //CPU_GPIO_SetPinState(g,true);

   // printf("MicroFramework Executing ...");
	/*
	for(; i < 10000;i++)
	 {
		j++;
	 }
	 */
	 
	

    // do
    // {   
        // //result = RamTest.Execute   ( STREAM__OUT );       
      // //  result = eventsTest.Execute( STREAM__OUT );
        // //result = usartTest.Execute ( STREAM__OUT );
       // // result = gpioTest.Execute  ( STREAM__OUT );
        // //result = spiTest.Execute   ( STREAM__OUT );
      // //  result = timersTest.Execute( STREAM__OUT );

    // } while(FALSE); // run only once!
    //return 10;
    //while(TRUE);
    //return 10;
}

