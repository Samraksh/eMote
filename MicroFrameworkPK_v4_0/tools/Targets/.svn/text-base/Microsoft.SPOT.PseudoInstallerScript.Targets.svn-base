<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <UsingTask TaskName="Microsoft.SPOT.Tasks.Internal.CreatePseudoInstallScript" AssemblyFile="$(BUILD_TREE_SERVER)\dll\Microsoft.SPOT.Tasks.Internal.dll" />

    <PropertyGroup>
        <!-- the % is intentionally literal so that %foo% variables appear in the output script, rather than the current values thereof -->
        <ExperimentalBuild Condition="'$(ExperimentalBuild)'==''">Exp</ExperimentalBuild>
        <VSIP_DIR>%BUILD_TREE_SERVER%\dll</VSIP_DIR>
        <MFSDKInstallerFile>$(BUILD_TREE_SERVER)\msm\MicroFrameworkSDK.MSI</MFSDKInstallerFile>
        <PseudoInstallerScript Condition="'$(PseudoInstallerScript)'==''">$(SPOCLIENT)\tools\scripts\mfpseudoinstaller.cmd</PseudoInstallerScript>
        <VSVER Condition="'$(VSVER)'==''" >9.0</VSVER>
    </PropertyGroup>

    <!-- The ComponentReplacements group are registry settings whose values are WiX -->
    <!-- components that refer to files or directories on the target machine. We    -->
    <!-- just replace the value encoded in the installer's registry value with the  -->
    <!-- equivalent file or directory in our build or source tree                   -->
    <ItemGroup>
        <!-- new, current-version components -->
        <ComponentReplacements Include="VERSIONDIR">
            <ReplaceWith>%BUILD_TREE%</ReplaceWith>
        </ComponentReplacements>

        <ComponentReplacements Include="Component_Microsoft.SPOT.Debugger.CorDebug">
            <ReplaceWith>$(VSIP_DIR)</ReplaceWith>
         </ComponentReplacements>

        <ComponentReplacements Include="Component_Microsoft.SPOT.Emulator.Sample.SampleEmulator">
            <ReplaceWith>$(VSIP_DIR)</ReplaceWith>
        </ComponentReplacements>

        <ComponentReplacements Include="ToolsDir">
            <ReplaceWith>%BUILD_TREE_SERVER%\dll</ReplaceWith>
        </ComponentReplacements>

        <ComponentReplacements Include="Component_Targets">
            <ReplaceWith>%SPOCLIENT%\Framework\IDE\Targets</ReplaceWith>
        </ComponentReplacements>
    </ItemGroup>

    <ItemGroup>
        <!-- v2.5 backcompat components -->
        <ComponentReplacements Include="VERSIONDIR_v2_5">
            <ReplaceWith>%SPOCLIENT%\Product\v2.5\Executables</ReplaceWith>
        </ComponentReplacements>

        <ComponentReplacements Include="ToolsDir_v2_5">
            <ReplaceWith>%SPOCLIENT%\Product\v2.5\Executables\Server</ReplaceWith>
        </ComponentReplacements>

        <ComponentReplacements Include="Component_Targets_v2_5">
            <ReplaceWith>%SPOCLIENT%\Product\v2.5\Targets</ReplaceWith>
        </ComponentReplacements>

        <ComponentReplacements Include="microsoftspotemulatorsamplesampleemulatorexe">
            <ReplaceWith>%SPOCLIENT%\Product\v2.5\Executables\Server</ReplaceWith>
        </ComponentReplacements>
    </ItemGroup>

    <!-- The KeyReplacements group are those registry settings where we want to map the -->
    <!-- key used in the installer to an equivalent key that does not require admin     -->
    <!-- privs or potentially mess up the global registration environment               -->
    <ItemGroup>
        <KeyReplacements Include="Class registration for classes of our VSIP">
            <Prefix>HKCR\CLSID</Prefix>
            <ReplaceWith>HKCU\Software\Microsoft\VisualStudio\$(VSVER)$(ExperimentalBuild)\Configuration\CLSID</ReplaceWith>
        </KeyReplacements>

        <KeyReplacements Include="Public Assemblies, eg Emulator">
            <Prefix>HKLM\Software\Microsoft\.NETFramework\</Prefix>
            <ReplaceWith>HKCU\Software\Microsoft\.NETFramework\</ReplaceWith>
        </KeyReplacements>

        <KeyReplacements Include="Adding our VSIP to VS $(VSVER) configuration $(ExperimentalBuild)">
            <Prefix>HKLM\Software\Microsoft\VisualStudio\$(VSVER)\</Prefix>
            <ReplaceWith>HKCU\Software\Microsoft\VisualStudio\$(VSVER)$(ExperimentalBuild)\Configuration\</ReplaceWith>
        </KeyReplacements>

        <KeyReplacements Include="MF Assemblies">
            <Prefix>HKLM\Software\Microsoft\.NETMicroFramework</Prefix>
            <ReplaceWith>HKCU\Software\Microsoft\.NETMicroFramework</ReplaceWith>
        </KeyReplacements>
    </ItemGroup>

    <!-- The IgnoreKeys group are those registry settings that are in our installer that we -->
    <!-- actually DO NOT wish to pretend to install                                         -->
    <ItemGroup>
        <IgnoreKeys Include="VCS Express registry keys -- requires admin rights to succeed">
            <Prefix>HKLM\SOFTWARE\Microsoft\VCSExpress</Prefix>
        </IgnoreKeys>
        <IgnoreKeys Include="VC Runtime merge modules">
            <Prefix>HKLM\SOFTWARE\Microsoft\Windows</Prefix>
        </IgnoreKeys>
    </ItemGroup>

    <!-- The RawReg group are those registry settings in normal installs are not present at all -->
    <ItemGroup>
        <RawRegs Include="AssemblyFoldersEx">
            <Root>HKLM</Root>
            <Key>Software\Microsoft\.NETMicroFramework\v4.0\AssemblyFolder</Key>
            <Name></Name>
            <Type>SZ</Type>
            <Value>%BUILD_TREE_CLIENT%\dll</Value>
        </RawRegs>

    </ItemGroup>

    <Target Name="Uninstall">
        <Exec Condition=" Exists($(PseudoInstallerScript)) "
            Command="$(PseudoInstallerScript) /u"
            />
    </Target>

    <Target Name="Install">
        <Exec Condition=" Exists($(PseudoInstallerScript)) "
            Command="$(PseudoInstallerScript) /i"
            />
    </Target>

    <Target Name="CreatePseudoInstallScript">
       <Message Importance="high" Text="Creating pseudo-installer script at $(PseudoInstallerScript)" />
       <CreatePseudoInstallScript
          OutputScript="$(PseudoInstallerScript)"
          InstallerFile="$(MFSDKInstallerFile)"
          Replacements="@(ComponentReplacements)"
          RegistrySettings="@(RawRegs)"
          KeyReplacements="@(KeyReplacements)"
          IgnoreKeys="@(IgnoreKeys)"
          Verbose="$(PrepVsVerbose)"
        />
    </Target>

    <Target Name="PrepVs" DependsOnTargets="Uninstall;CreatePseudoInstallScript;Install" />
</Project>
