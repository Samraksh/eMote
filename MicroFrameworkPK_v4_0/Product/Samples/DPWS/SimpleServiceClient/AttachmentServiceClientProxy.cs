//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     .NET Micro Framework MFSvcUtil.Exe
//     Runtime Version:2.0.00001.0001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Xml;
using Dpws.Client;
using Dpws.Client.Discovery;
using Dpws.Client.Eventing;
using Dpws.Client.Transport;
using Ws.Services;
using Ws.Services.Utilities;
using Ws.Services.Soap;
using Ws.Services.Mtom;
using Ws.Services.WsaAddressing;
using Ws.Services.Xml;

namespace schemas.example.org.AttachmentService
{
    
    
    public class AttachmentServiceClientProxy : DpwsClient
    {
        
        public string ServiceEndpoint = null;
        
        private DpwsHttpClient m_httpClient = new DpwsHttpClient();
        
        public AttachmentServiceClientProxy()
        {
            Init();
        }
        
        public AttachmentServiceClientProxy(int port) : 
                base(port)
        {
            Init();
        }
        
        public virtual void Init()
        {

            // // Set client endpoint address
            EndpointAddress = "urn:uuid:e9bdc9e4-4125-464f-bbe0-6149f73a078f";

            // // Create the BodyParts instance
            BodyParts = new WsMtomBodyParts();
        }
        
        public virtual void OneWayAttachment(OneWayAttachment req)
        {

            // Create request header
            String action;
            action = "http://schemas.example.org/AttachmentService/OneWayAttachment";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, ServiceEndpoint, null, EndpointAddress, null);

            // Create request serializer
            OneWayAttachmentDataContractSerializer reqDcs;
            reqDcs = new OneWayAttachmentDataContractSerializer("OneWayAttachment", "http://schemas.example.org/AttachmentService");

            // Build soap request message
            byte[] soapBuffer = SoapMessageBuilder.BuildSoapMessage(header, reqDcs, req);

            // Build mtom request message and store as first Mtom Bodypart
            MessageType = WsMessageType.Mtom;
            WsMtomBodyParts bodyParts = new WsMtomBodyParts();
            bodyParts.Start = "<soap@soap>";
            bodyParts.Add(reqDcs.CreateNewBodyPart(soapBuffer, "<soap@soap>"));
            bodyParts.Add(reqDcs.BodyParts[0]);

            // Send service request
            DpwsSoapResponse response;
            response = m_httpClient.SendRequest(ref bodyParts, ServiceEndpoint, true, false);
        }
        
        public virtual TwoWayAttachmentResponse TwoWayAttachmentRequest(TwoWayAttachmentRequest req)
        {

            // Create request header
            String action;
            action = "http://schemas.example.org/AttachmentService/TwoWayAttachmentRequest";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, ServiceEndpoint, null, EndpointAddress, null);

            // Create request serializer
            TwoWayAttachmentRequestDataContractSerializer reqDcs;
            reqDcs = new TwoWayAttachmentRequestDataContractSerializer("TwoWayAttachmentRequest", "http://schemas.example.org/AttachmentService");

            // Build soap request message
            byte[] soapBuffer = SoapMessageBuilder.BuildSoapMessage(header, reqDcs, req);

            // Build mtom request message and store as first Mtom Bodypart
            MessageType = WsMessageType.Mtom;
            WsMtomBodyParts bodyParts = new WsMtomBodyParts();
            bodyParts.Start = "<soap@soap>";
            bodyParts.Add(reqDcs.CreateNewBodyPart(soapBuffer, "<soap@soap>"));
            bodyParts.Add(reqDcs.BodyParts[0]);

            // Send service request
            DpwsSoapResponse response;
            response = m_httpClient.SendRequest(ref bodyParts, ServiceEndpoint, false, false);

            // Process response
            TwoWayAttachmentResponseDataContractSerializer respDcs;
            respDcs = new TwoWayAttachmentResponseDataContractSerializer("TwoWayAttachmentResponse", "http://schemas.example.org/AttachmentService");
            respDcs.BodyParts = bodyParts;
            TwoWayAttachmentResponse resp;
            resp = ((TwoWayAttachmentResponse)(respDcs.ReadObject(response.Reader)));
            return resp;
        }
    }
}
