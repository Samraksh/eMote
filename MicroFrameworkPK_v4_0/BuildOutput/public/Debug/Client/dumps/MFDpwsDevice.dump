Assembly: MFDpwsDevice (4.0.1681.0)

Size: AssemblyRef         84 byte(s)      7 item(s) [Runtime:     28]
Size: TypeRef            512 byte(s)     64 item(s) [Runtime:    256]
Size: FieldRef            80 byte(s)     10 item(s) [Runtime:     40]
Size: MethodRef         1152 byte(s)    144 item(s) [Runtime:    576]
Size: TypeDef            480 byte(s)     20 item(s) [Runtime:    160]
Size: FieldDef           520 byte(s)     65 item(s) [Runtime:    130]
Size: MethodDef         2320 byte(s)    145 item(s) [Runtime:    290]
Size: Attributes           0 byte(s)      0 item(s)
Size: TypeSpec             4 byte(s)      1 item(s)
Size: Resources Files      0 byte(s)      0 item(s)
Size: Resources            0 byte(s)      0 item(s)
Size: ResourcesData        0 byte(s)
Size: Strings           6830 byte(s)
Size: Signatures        1018 byte(s)
Size: ByteCode          8163 byte(s)


AssemblyRef: 0000[0000007c] mscorlib (4.0.1681.0)
AssemblyRef: 0001[00000088] MFWsStack (4.0.1681.0)
AssemblyRef: 0002[00000094] System.Xml (4.0.1681.0)
AssemblyRef: 0003[000000a0] System (4.0.1681.0)
AssemblyRef: 0004[000000ac] MFDpwsExtensions (4.0.1681.0)
AssemblyRef: 0005[000000b8] System.Http (4.0.1681.0)
AssemblyRef: 0006[000000c4] System.IO (4.0.1681.0)

TypeRef 0000[000000d0] [Scope: 0000] System Object
TypeRef 0001[000000d8] [Scope: 0001] Ws.Services IWsServiceEndpoint
TypeRef 0002[000000e0] [Scope: 0000] System Enum
TypeRef 0003[000000e8] [Scope: 0001] Ws.Services WsServiceEndpoints
TypeRef 0004[000000f0] [Scope: 0001] Ws.Services.Transport.UDP WsUdpServiceHost
TypeRef 0005[000000f8] [Scope: 0001] Ws.Services.Transport.HTTP WsHttpServiceHost
TypeRef 0006[00000100] [Scope: 0001] Ws.Services.Xml WsXmlNodeList
TypeRef 0007[00000108] [Scope: 0001] Ws.Services.WsaAddressing WsWsaEndpointRefs
TypeRef 0008[00000110] [Scope: 0001] Ws.Services WsServiceOperations
TypeRef 0009[00000118] [Scope: 0001] Ws.Services.Xml WsXmlNamespace
TypeRef 000a[00000120] [Scope: 0001] Ws.Services.Mtom WsMtomBodyParts
TypeRef 000b[00000128] [Scope: 0001] Ws.Services.Soap WsMessageType
TypeRef 000c[00000130] [Scope: 0001] Ws.Services.WsaAddressing WsWsaHeader
TypeRef 000d[00000138] [Scope: 0002] System.Xml XmlReader
TypeRef 000e[00000140] [Scope: 0003] System.Net IPEndPoint
TypeRef 000f[00000148] [Scope: 0004] System.Ext.Xml XmlWriter
TypeRef 0010[00000150] [Scope: 0000] System.Collections ArrayList
TypeRef 0011[00000158] [Scope: 0001] Ws.Services.WsaAddressing WsWsaEndpointRef
TypeRef 0012[00000160] [Scope: 0000] System.Threading Thread
TypeRef 0013[00000168] [Scope: 0001] Ws.Services.Transport.HTTP WsHttpClient
TypeRef 0014[00000170] [Scope: 0000] System NullReferenceException
TypeRef 0015[00000178] [Scope: 0000] System Int32
TypeRef 0016[00000180] [Scope: 0000] System String
TypeRef 0017[00000188] [Scope: 0004] System.Ext Console
TypeRef 0018[00000190] [Scope: 0001] Ws.Services.Transport WsNetworkServices
TypeRef 0019[00000198] [Scope: 0000] System InvalidOperationException
TypeRef 001a[000001a0] [Scope: 0000] System.Threading Monitor
TypeRef 001b[000001a8] [Scope: 0001] Ws.Services.Utilities WsUtilities
TypeRef 001c[000001b0] [Scope: 0000] System ArgumentException
TypeRef 001d[000001b8] [Scope: 0000] System DateTime
TypeRef 001e[000001c0] [Scope: 0000] System Exception
TypeRef 001f[000001c8] [Scope: 0000] System Type
TypeRef 0020[000001d0] [Scope: 0000] System.Reflection MemberInfo
TypeRef 0021[000001d8] [Scope: 0000] System Char
TypeRef 0022[000001e0] [Scope: 0000] System ArgumentNullException
TypeRef 0023[000001e8] [Scope: 0005] System Uri
TypeRef 0024[000001f0] [Scope: 0001] Ws.Services WsServiceOperation
TypeRef 0025[000001f8] [Scope: 0000] System.Reflection MethodInfo
TypeRef 0026[00000200] [Scope: 0001] Ws.Services.Faults WsFaultException
TypeRef 0027[00000208] [Scope: 0001] Ws.Services.Faults WsFaultType
TypeRef 0028[00000210] [Scope: 0000] System.Reflection MethodBase
TypeRef 0029[00000218] [Scope: 0006] System.IO MemoryStream
TypeRef 002a[00000220] [Scope: 0000] System.IO Stream
TypeRef 002b[00000228] [Scope: 0001] Ws.Services WsSoapMessageWriter
TypeRef 002c[00000230] [Scope: 802b]  AppSequence
TypeRef 002d[00000238] [Scope: 802b]  Prefixes
TypeRef 002e[00000240] [Scope: 0001] Ws.Services.Xml WsXmlNamespaces
TypeRef 002f[00000248] [Scope: 0001] Ws.Services.Utilities WsDuration
TypeRef 0030[00000250] [Scope: 0001] Ws.Services WsWellKnownUri
TypeRef 0031[00000258] [Scope: 0002] System.Xml XmlException
TypeRef 0032[00000260] [Scope: 0001] Ws.Services XmlReaderHelper
TypeRef 0033[00000268] [Scope: 0003] System.Net.Sockets Socket
TypeRef 0034[00000270] [Scope: 0003] System.Net.Sockets AddressFamily
TypeRef 0035[00000278] [Scope: 0003] System.Net.Sockets SocketType
TypeRef 0036[00000280] [Scope: 0003] System.Net.Sockets ProtocolType
TypeRef 0037[00000288] [Scope: 0003] System.Net IPAddress
TypeRef 0038[00000290] [Scope: 0003] System.Net.Sockets SocketOptionLevel
TypeRef 0039[00000298] [Scope: 0003] System.Net.Sockets SocketOptionName
TypeRef 003a[000002a0] [Scope: 0000] System Random
TypeRef 003b[000002a8] [Scope: 0003] System.Net.Sockets SocketFlags
TypeRef 003c[000002b0] [Scope: 0003] System.Net EndPoint
TypeRef 003d[000002b8] [Scope: 0001] Ws.Services.Utilities DebugTiming
TypeRef 003e[000002c0] [Scope: 0000] System.Threading ThreadStart
TypeRef 003f[000002c8] [Scope: 0000] System Guid

FieldRef 0000[000002d0] [Type: 0004] IgnoreRequestFromThisIP [FIELD BOOLEAN]
FieldRef 0001[000002d8] [Type: 0016] Empty [FIELD STRING]
FieldRef 0002[000002e0] [Type: 0024] MethodName [FIELD STRING]
FieldRef 0003[000002e8] [Type: 0011] Address [FIELD CLASS [01000023]]
FieldRef 0004[000002f0] [Type: 002f] DurationString [FIELD STRING]
FieldRef 0005[000002f8] [Type: 0009] NamespaceURI [FIELD STRING]
FieldRef 0006[00000300] [Type: 0009] Prefix [FIELD STRING]
FieldRef 0007[00000308] [Type: 0011] RefParameters [FIELD CLASS [01000006]]
FieldRef 0008[00000310] [Type: 0011] RefProperties [FIELD CLASS [01000006]]
FieldRef 0009[00000318] [Type: 002f] DurationInSeconds [FIELD I8]

MethodRef 0000[00000320] [Type: 0005] get_MaxThreadCount [METHOD I4()]
MethodRef 0001[00000328] [Type: 0014] .ctor [METHOD VOID( STRING )]
MethodRef 0002[00000330] [Type: 0005] set_MaxThreadCount [METHOD VOID( I4 )]
MethodRef 0003[00000338] [Type: 0004] get_MaxThreadCount [METHOD I4()]
MethodRef 0004[00000340] [Type: 0004] set_MaxThreadCount [METHOD VOID( I4 )]
MethodRef 0005[00000348] [Type: 0003] Add [METHOD I4( CLASS [01000001] )]
MethodRef 0006[00000350] [Type: 0004] .ctor [METHOD VOID( CLASS [01000003] )]
MethodRef 0007[00000358] [Type: 0005] .ctor [METHOD VOID( I4, CLASS [01000003] )]
MethodRef 0008[00000360] [Type: 0016] Substring [METHOD STRING( I4 )]
MethodRef 0009[00000368] [Type: 0016] Concat [METHOD STRING( SZARRAY OBJECT )]
MethodRef 000a[00000370] [Type: 0017] Write [METHOD VOID( STRING )]
MethodRef 000b[00000378] [Type: 0016] Concat [METHOD STRING( STRING, STRING )]
MethodRef 000c[00000380] [Type: 0018] GetLocalIPV4Address [METHOD STRING()]
MethodRef 000d[00000388] [Type: 0019] .ctor [METHOD VOID()]
MethodRef 000e[00000390] [Type: 0004] Start [METHOD VOID()]
MethodRef 000f[00000398] [Type: 0005] Start [METHOD VOID()]
MethodRef 0010[000003a0] [Type: 0004] Stop [METHOD VOID()]
MethodRef 0011[000003a8] [Type: 0005] Stop [METHOD VOID()]
MethodRef 0012[000003b0] [Type: 0015] ToString [METHOD STRING()]
MethodRef 0013[000003b8] [Type: 001a] Enter [METHOD VOID( OBJECT )]
MethodRef 0014[000003c0] [Type: 001b] ValidateUrnUuid [METHOD BOOLEAN( STRING )]
MethodRef 0015[000003c8] [Type: 001c] .ctor [METHOD VOID( STRING )]
MethodRef 0016[000003d0] [Type: 0016] Concat [METHOD STRING( SZARRAY STRING )]
MethodRef 0017[000003d8] [Type: 001a] Exit [METHOD VOID( OBJECT )]
MethodRef 0018[000003e0] [Type: 001d] .ctor [METHOD VOID( I4, I4, I4, I4, I4, I4, I4 )]
MethodRef 0019[000003e8] [Type: 001d] get_Ticks [METHOD I8()]
MethodRef 001a[000003f0] [Type: 001d] get_UtcNow [METHOD VALUETYPE [0100001d]()]
MethodRef 001b[000003f8] [Type: 001e] .ctor [METHOD VOID( STRING )]
MethodRef 001c[00000400] [Type: 0000] .ctor [METHOD VOID()]
MethodRef 001d[00000408] [Type: 0003] .ctor [METHOD VOID()]
MethodRef 001e[00000410] [Type: 0007] .ctor [METHOD VOID()]
MethodRef 001f[00000418] [Type: 0008] .ctor [METHOD VOID()]
MethodRef 0020[00000420] [Type: 0000] GetType [METHOD CLASS [0100001f]()]
MethodRef 0021[00000428] [Type: 0020] get_Name [METHOD STRING()]
MethodRef 0022[00000430] [Type: 001f] get_FullName [METHOD STRING()]
MethodRef 0023[00000438] [Type: 0016] get_Length [METHOD I4()]
MethodRef 0024[00000440] [Type: 0016] LastIndexOf [METHOD I4( CHAR )]
MethodRef 0025[00000448] [Type: 0016] get_Chars [METHOD CHAR( I4 )]
MethodRef 0026[00000450] [Type: 0016] .ctor [METHOD VOID( SZARRAY CHAR )]
MethodRef 0027[00000458] [Type: 0009] .ctor [METHOD VOID( STRING, STRING )]
MethodRef 0028[00000460] [Type: 0022] .ctor [METHOD VOID( STRING )]
MethodRef 0029[00000468] [Type: 001c] .ctor [METHOD VOID( STRING, STRING )]
MethodRef 002a[00000470] [Type: 0022] .ctor [METHOD VOID( STRING, STRING )]
MethodRef 002b[00000478] [Type: 0023] .ctor [METHOD VOID( STRING )]
MethodRef 002c[00000480] [Type: 001c] .ctor [METHOD VOID( STRING, CLASS [0100001e] )]
MethodRef 002d[00000488] [Type: 0007] Clear [METHOD VOID()]
MethodRef 002e[00000490] [Type: 0011] .ctor [METHOD VOID( CLASS [01000023] )]
MethodRef 002f[00000498] [Type: 0007] Add [METHOD I4( CLASS [01000011] )]
MethodRef 0030[000004a0] [Type: 000c] get_Action [METHOD STRING()]
MethodRef 0031[000004a8] [Type: 0008] get_Item [METHOD CLASS [01000024]( STRING )]
MethodRef 0032[000004b0] [Type: 001f] GetMethod [METHOD CLASS [01000025]( STRING )]
MethodRef 0033[000004b8] [Type: 0016] Concat [METHOD STRING( STRING, STRING, STRING )]
MethodRef 0034[000004c0] [Type: 0026] .ctor [METHOD VOID( CLASS [0100000c], VALUETYPE [01000027] )]
MethodRef 0035[000004c8] [Type: 0028] Invoke [METHOD OBJECT( OBJECT, SZARRAY OBJECT )]
MethodRef 0036[000004d0] [Type: 0016] IndexOf [METHOD I4( STRING )]
MethodRef 0037[000004d8] [Type: 0016] op_Equality [METHOD BOOLEAN( STRING, STRING )]
MethodRef 0038[000004e0] [Type: 000c] get_To [METHOD STRING()]
MethodRef 0039[000004e8] [Type: 0016] Concat [METHOD STRING( STRING, STRING, STRING, STRING )]
MethodRef 003a[000004f0] [Type: 0026] .ctor [METHOD VOID( CLASS [0100000c], VALUETYPE [01000027], STRING )]
MethodRef 003b[000004f8] [Type: 0029] .ctor [METHOD VOID()]
MethodRef 003c[00000500] [Type: 000f] Create [METHOD CLASS [0100000f]( CLASS [0100002a] )]
MethodRef 003d[00000508] [Type: 000c] get_MessageID [METHOD STRING()]
MethodRef 003e[00000510] [Type: 000c] get_ReplyTo [METHOD CLASS [01000011]()]
MethodRef 003f[00000518] [Type: 0023] get_AbsoluteUri [METHOD STRING()]
MethodRef 0040[00000520] [Type: 000c] .ctor [METHOD VOID( STRING, STRING, STRING, STRING, STRING, CLASS [01000006] )]
MethodRef 0041[00000528] [Type: 002c] .ctor [METHOD VOID( STRING, STRING, STRING )]
MethodRef 0042[00000530] [Type: 002b] WriteSoapMessageStart [METHOD STRING( CLASS [0100000f], VALUETYPE [0100002d], CLASS [0100002e], CLASS [0100000c], CLASS [0100002c] )]
MethodRef 0043[00000538] [Type: 000f] WriteStartElement [METHOD VOID( STRING, STRING, STRING )]
MethodRef 0044[00000540] [Type: 002f] .ctor [METHOD VOID( I8 )]
MethodRef 0045[00000548] [Type: 000f] WriteString [METHOD VOID( STRING )]
MethodRef 0046[00000550] [Type: 000f] WriteEndElement [METHOD VOID()]
MethodRef 0047[00000558] [Type: 002b] WriteSoapMessageEnd [METHOD VOID( CLASS [0100000f] )]
MethodRef 0048[00000560] [Type: 000f] Flush [METHOD VOID()]
MethodRef 0049[00000568] [Type: 000f] Close [METHOD VOID()]
MethodRef 004a[00000570] [Type: 0029] ToArray [METHOD SZARRAY U1()]
MethodRef 004b[00000578] [Type: 0030] get_WsdNamespaceUri [METHOD STRING()]
MethodRef 004c[00000580] [Type: 0024] .ctor [METHOD VOID( STRING, STRING )]
MethodRef 004d[00000588] [Type: 0008] Add [METHOD I4( CLASS [01000024] )]
MethodRef 004e[00000590] [Type: 000d] ReadStartElement [METHOD VOID( STRING, STRING )]
MethodRef 004f[00000598] [Type: 000d] IsStartElement [METHOD BOOLEAN( STRING, STRING )]
MethodRef 0050[000005a0] [Type: 000d] ReadElementString [METHOD STRING()]
MethodRef 0051[000005a8] [Type: 0016] Split [METHOD SZARRAY STRING( SZARRAY CHAR )]
MethodRef 0052[000005b0] [Type: 0016] IndexOf [METHOD I4( CHAR )]
MethodRef 0053[000005b8] [Type: 0031] .ctor [METHOD VOID( STRING )]
MethodRef 0054[000005c0] [Type: 0016] Substring [METHOD STRING( I4, I4 )]
MethodRef 0055[000005c8] [Type: 000d] LookupNamespace [METHOD STRING( STRING )]
MethodRef 0056[000005d0] [Type: 0003] get_Count [METHOD I4()]
MethodRef 0057[000005d8] [Type: 0003] get_Item [METHOD CLASS [01000001]( I4 )]
MethodRef 0058[000005e0] [Type: 0032] SkipAllSiblings [METHOD VOID( CLASS [0100000d] )]
MethodRef 0059[000005e8] [Type: 000d] ReadEndElement [METHOD VOID()]
MethodRef 005a[000005f0] [Type: 0030] set_WsdNamespaceUri [METHOD VOID( STRING )]
MethodRef 005b[000005f8] [Type: 0013] .ctor [METHOD VOID()]
MethodRef 005c[00000600] [Type: 0013] SendRequest [METHOD SZARRAY U1( SZARRAY U1, STRING, BOOLEAN, BOOLEAN )]
MethodRef 005d[00000608] [Type: 0033] .ctor [METHOD VOID( VALUETYPE [01000034], VALUETYPE [01000035], VALUETYPE [01000036] )]
MethodRef 005e[00000610] [Type: 0037] Parse [METHOD CLASS [01000037]( STRING )]
MethodRef 005f[00000618] [Type: 0037] GetAddressBytes [METHOD SZARRAY U1()]
MethodRef 0060[00000620] [Type: 0033] SetSocketOption [METHOD VOID( VALUETYPE [01000038], VALUETYPE [01000039], I4 )]
MethodRef 0061[00000628] [Type: 0037] .ctor [METHOD VOID( I8 )]
MethodRef 0062[00000630] [Type: 000e] .ctor [METHOD VOID( CLASS [01000037], I4 )]
MethodRef 0063[00000638] [Type: 003a] .ctor [METHOD VOID()]
MethodRef 0064[00000640] [Type: 003a] Next [METHOD I4( I4 )]
MethodRef 0065[00000648] [Type: 0012] Sleep [METHOD VOID( I4 )]
MethodRef 0066[00000650] [Type: 0033] SendTo [METHOD I4( SZARRAY U1, I4, VALUETYPE [0100003b], CLASS [0100003c] )]
MethodRef 0067[00000658] [Type: 0033] Close [METHOD VOID()]
MethodRef 0068[00000660] [Type: 002e] .ctor [METHOD VOID()]
MethodRef 0069[00000668] [Type: 002e] Add [METHOD I4( CLASS [01000009] )]
MethodRef 006a[00000670] [Type: 003d] .ctor [METHOD VOID()]
MethodRef 006b[00000678] [Type: 003d] ResetStartTime [METHOD I8( STRING )]
MethodRef 006c[00000680] [Type: 003d] PrintElapsedTime [METHOD VOID( STRING )]
MethodRef 006d[00000688] [Type: 003d] PrintTotalTime [METHOD VOID( I8, STRING )]
MethodRef 006e[00000690] [Type: 0011] .ctor [METHOD VOID( CLASS [0100000d] )]
MethodRef 006f[00000698] [Type: 0016] op_Inequality [METHOD BOOLEAN( STRING, STRING )]
MethodRef 0070[000006a0] [Type: 000f] WriteAttributeString [METHOD VOID( STRING, STRING )]
MethodRef 0071[000006a8] [Type: 0006] WriteTo [METHOD VOID( CLASS [0100000f] )]
MethodRef 0072[000006b0] [Type: 0010] .ctor [METHOD VOID()]
MethodRef 0073[000006b8] [Type: 0007] get_Item [METHOD CLASS [01000011]( I4 )]
MethodRef 0074[000006c0] [Type: 0010] Add [METHOD I4( OBJECT )]
MethodRef 0075[000006c8] [Type: 0007] get_Count [METHOD I4()]
MethodRef 0076[000006d0] [Type: 0010] Contains [METHOD BOOLEAN( OBJECT )]
MethodRef 0077[000006d8] [Type: 0001] get_EndpointAddress [METHOD STRING()]
MethodRef 0078[000006e0] [Type: 0010] get_Count [METHOD I4()]
MethodRef 0079[000006e8] [Type: 0010] get_Item [METHOD OBJECT( I4 )]
MethodRef 007a[000006f0] [Type: 0010] RemoveAt [METHOD VOID( I4 )]
MethodRef 007b[000006f8] [Type: 0010] Clear [METHOD VOID()]
MethodRef 007c[00000700] [Type: 0010] Remove [METHOD VOID( OBJECT )]
MethodRef 007d[00000708] [Type: 003e] .ctor [METHOD VOID( OBJECT, I4 )]
MethodRef 007e[00000710] [Type: 0012] .ctor [METHOD VOID( CLASS [0100003e] )]
MethodRef 007f[00000718] [Type: 0012] Start [METHOD VOID()]
MethodRef 0080[00000720] [Type: 001d] get_Now [METHOD VALUETYPE [0100001d]()]
MethodRef 0081[00000728] [Type: 001e] get_Message [METHOD STRING()]
MethodRef 0082[00000730] [Type: 000c] get_RelatesTo [METHOD STRING()]
MethodRef 0083[00000738] [Type: 000f] WriteRaw [METHOD VOID( STRING )]
MethodRef 0084[00000740] [Type: 0023] get_Scheme [METHOD STRING()]
MethodRef 0085[00000748] [Type: 0016] Concat [METHOD STRING( OBJECT, OBJECT )]
MethodRef 0086[00000750] [Type: 002f] .ctor [METHOD VOID( STRING )]
MethodRef 0087[00000758] [Type: 000d] MoveToAttribute [METHOD BOOLEAN( STRING )]
MethodRef 0088[00000760] [Type: 000d] get_Value [METHOD STRING()]
MethodRef 0089[00000768] [Type: 000d] MoveToElement [METHOD BOOLEAN()]
MethodRef 008a[00000770] [Type: 0000] ToString [METHOD STRING()]
MethodRef 008b[00000778] [Type: 003f] NewGuid [METHOD VALUETYPE [0100003f]()]
MethodRef 008c[00000780] [Type: 0023] get_AbsolutePath [METHOD STRING()]
MethodRef 008d[00000788] [Type: 000c] get_Any [METHOD CLASS [01000006]()]
MethodRef 008e[00000790] [Type: 0006] GetNodeValue [METHOD STRING( STRING, STRING )]
MethodRef 008f[00000798] [Type: 0031] .ctor [METHOD VOID()]

TypeDef 0000[000007a0] [Extends: 8000] [Enclosed: ffff] [Flags: 000010c1] Dpws.Device Device
TypeDef 0001[000007b8] [Extends: 8000] [Enclosed: ffff] [Flags: 00001041] Dpws.Device.Discovery DiscoveryVersion
TypeDef 0002[000007d0] [Extends: 0001] [Enclosed: ffff] [Flags: 00001001] Dpws.Device.Discovery DiscoveryVersion10
TypeDef 0003[000007e8] [Extends: 0001] [Enclosed: ffff] [Flags: 00001001] Dpws.Device.Discovery DiscoveryVersion11
TypeDef 0004[00000800] [Extends: 8000] [Enclosed: ffff] [Flags: 00001001] Dpws.Device.Services DpwsHostedService
TypeDef 0005[00000818] [Extends: 0004] [Enclosed: ffff] [Flags: 00001000] Dpws.Device.Discovery DpwsDeviceDiscoService
TypeDef 0006[00000830] [Extends: 8000] [Enclosed: ffff] [Flags: 00001000] Dpws.Device.Discovery DpwsDeviceDiscovery
TypeDef 0007[00000848] [Extends: 8000] [Enclosed: ffff] [Flags: 000010c0] Dpws.Device.Discovery DpwsDiscoGreeting
TypeDef 0008[00000860] [Extends: 8000] [Enclosed: ffff] [Flags: 00001001] Dpws.Device.Discovery ManagedDiscovery
TypeDef 0009[00000878] [Extends: 0004] [Enclosed: ffff] [Flags: 00001000] Dpws.Device.Mex DpwsDeviceMexService
TypeDef 000a[00000890] [Extends: 8000] [Enclosed: ffff] [Flags: 00001000] Dpws.Device.Mex DpwsWsxMetdataResponse
TypeDef 000b[000008a8] [Extends: 8000] [Enclosed: ffff] [Flags: 00001000] Dpws.Device.Services DpwsWseEventSink
TypeDef 000c[000008c0] [Extends: 8000] [Enclosed: ffff] [Flags: 00001080] Dpws.Device.Services DpwsWseEventSinkQMgr
TypeDef 000d[000008d8] [Extends: 8000] [Enclosed: ffff] [Flags: 00001000] Dpws.Device.Services DpwsWseEventSinks
TypeDef 000e[000008f0] [Extends: 8000] [Enclosed: ffff] [Flags: 00001001] Dpws.Device.Services DpwsWseEventSource
TypeDef 000f[00000908] [Extends: 8000] [Enclosed: ffff] [Flags: 00001001] Dpws.Device.Services DpwsWseEventSources
TypeDef 0010[00000920] [Extends: 8002] [Enclosed: ffff] [Flags: 000000b8] Dpws.Device.Services DpwsWseEventStatus
TypeDef 0011[00000938] [Extends: 8000] [Enclosed: ffff] [Flags: 00001001] Dpws.Device.Services DpwsWseSubscriptionMgr
TypeDef 0012[00000950] [Extends: 8000] [Enclosed: 0000] [Flags: 000010c2]  ThisDevice
TypeDef 0013[00000968] [Extends: 8000] [Enclosed: 0000] [Flags: 000010c2]  ThisModel

FieldDef 0000[00000980] [Flags: 00000011] Dpws.Device.Device::m_eventQManager [FIELD CLASS [0400000c]]
FieldDef 0001[00000988] [Flags: 00000011] Dpws.Device.Device::m_MetadataVersion [FIELD I4]
FieldDef 0002[00000990] [Flags: 00000011] Dpws.Device.Device::m_AppSequence [FIELD STRING]
FieldDef 0003[00000998] [Flags: 00000011] Dpws.Device.Device::m_MessageID [FIELD I4]
FieldDef 0004[000009a0] [Flags: 00000011] Dpws.Device.Device::m_port [FIELD I4]
FieldDef 0005[000009a8] [Flags: 00000011] Dpws.Device.Device::m_address [FIELD STRING]
FieldDef 0006[000009b0] [Flags: 00000011] Dpws.Device.Device::m_transportAddress [FIELD STRING]
FieldDef 0007[000009b8] [Flags: 00000011] Dpws.Device.Device::m_threadLock [FIELD OBJECT]
FieldDef 0008[000009c0] [Flags: 00000011] Dpws.Device.Device::m_discoServiceEndpoints [FIELD CLASS [01000003]]
FieldDef 0009[000009c8] [Flags: 00000011] Dpws.Device.Device::m_hostedServices [FIELD CLASS [01000003]]
FieldDef 000a[000009d0] [Flags: 00000011] Dpws.Device.Device::m_udpServiceHost [FIELD CLASS [01000004]]
FieldDef 000b[000009d8] [Flags: 00000011] Dpws.Device.Device::m_httpServiceHost [FIELD CLASS [01000005]]
FieldDef 000c[000009e0] [Flags: 00000011] Dpws.Device.Device::m_ignoreRequestFromThisIP [FIELD BOOLEAN]
FieldDef 000d[000009e8] [Flags: 00000011] Dpws.Device.Device::m_appMaxDelay [FIELD I4]
FieldDef 000e[000009f0] [Flags: 00000011] Dpws.Device.Device::isStarted [FIELD BOOLEAN]
FieldDef 000f[000009f8] [Flags: 00000011] Dpws.Device.Device::m_supressAdhoc [FIELD BOOLEAN]
FieldDef 0010[00000a00] [Flags: 00000011] Dpws.Device.Device::m_discoVersion [FIELD CLASS [04000001]]
FieldDef 0011[00000a08] [Flags: 00000013] Dpws.Device.Device::m_discoveryService [FIELD CLASS [04000005]]
FieldDef 0012[00000a10] [Flags: 00000013] Dpws.Device.Device::m_discoMexService [FIELD CLASS [04000009]]
FieldDef 0013[00000a18] [Flags: 00000016] Dpws.Device.Device::Host [FIELD CLASS [04000004]]
FieldDef 0014[00000a20] [Flags: 00000016] Dpws.Device.Device::SubscriptionManager [FIELD CLASS [04000011]]
FieldDef 0015[00000a28] [Flags: 00000013] Dpws.Device.Device::SequenceID [FIELD STRING]
FieldDef 0016[00000a30] [Flags: 00000011] Dpws.Device.Services.DpwsHostedService::m_prefixCounter [FIELD I4]
FieldDef 0017[00000a38] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_threadLock [FIELD OBJECT]
FieldDef 0018[00000a40] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_serviceID [FIELD STRING]
FieldDef 0019[00000a48] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_endpointAddress [FIELD STRING]
FieldDef 001a[00000a50] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_endpointRefs [FIELD CLASS [01000007]]
FieldDef 001b[00000a58] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_serviceOperations [FIELD CLASS [01000008]]
FieldDef 001c[00000a60] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_eventSources [FIELD CLASS [0400000f]]
FieldDef 001d[00000a68] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_serviceTypeName [FIELD STRING]
FieldDef 001e[00000a70] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_serviceNamespace [FIELD CLASS [01000009]]
FieldDef 001f[00000a78] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_bodyParts [FIELD CLASS [0100000a]]
FieldDef 0020[00000a80] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_messageType [FIELD VALUETYPE [0100000b]]
FieldDef 0021[00000a88] [Flags: 00000001] Dpws.Device.Services.DpwsHostedService::m_blockingCall [FIELD BOOLEAN]
FieldDef 0022[00000a90] [Flags: 00000011] Dpws.Device.Discovery.DpwsDiscoGreeting::DiscoveryEP [FIELD CLASS [0100000e]]
FieldDef 0023[00000a98] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSink::m_guid [FIELD STRING]
FieldDef 0024[00000aa0] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSink::m_endTo [FIELD CLASS [01000011]]
FieldDef 0025[00000aa8] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSink::m_notifyTo [FIELD CLASS [01000011]]
FieldDef 0026[00000ab0] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSink::m_expires [FIELD I8]
FieldDef 0027[00000ab8] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSink::m_startTime [FIELD I8]
FieldDef 0028[00000ac0] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSink::m_filter [FIELD SZARRAY STRING]
FieldDef 0029[00000ac8] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSinkQMgr::m_requestStop [FIELD BOOLEAN]
FieldDef 002a[00000ad0] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSinkQMgr::m_thread [FIELD CLASS [01000012]]
FieldDef 002b[00000ad8] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSinks::m_threadLock [FIELD OBJECT]
FieldDef 002c[00000ae0] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSinks::m_sinkList [FIELD CLASS [01000010]]
FieldDef 002d[00000ae8] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSource::m_name [FIELD STRING]
FieldDef 002e[00000af0] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSource::m_prefix [FIELD STRING]
FieldDef 002f[00000af8] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSource::m_namespaceURI [FIELD STRING]
FieldDef 0030[00000b00] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSource::m_Operation [FIELD STRING]
FieldDef 0031[00000b08] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSource::m_eventSinks [FIELD CLASS [0400000d]]
FieldDef 0032[00000b10] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSources::m_threadLock [FIELD OBJECT]
FieldDef 0033[00000b18] [Flags: 00000001] Dpws.Device.Services.DpwsWseEventSources::m_sourceList [FIELD CLASS [01000010]]
FieldDef 0034[00000b20] [Flags: 00000106] Dpws.Device.Services.DpwsWseEventStatus::value__ [FIELD I4]
FieldDef 0035[00000b28] [Flags: 00000001] Dpws.Device.Services.DpwsWseSubscriptionMgr::httpClient [FIELD CLASS [01000013]]
FieldDef 0036[00000b30] [Flags: 00000016] Dpws.Device.Device.ThisDevice::FriendlyName [FIELD STRING]
FieldDef 0037[00000b38] [Flags: 00000016] Dpws.Device.Device.ThisDevice::FirmwareVersion [FIELD STRING]
FieldDef 0038[00000b40] [Flags: 00000016] Dpws.Device.Device.ThisDevice::SerialNumber [FIELD STRING]
FieldDef 0039[00000b48] [Flags: 00000016] Dpws.Device.Device.ThisDevice::Any [FIELD CLASS [01000006]]
FieldDef 003a[00000b50] [Flags: 00000016] Dpws.Device.Device.ThisModel::Manufacturer [FIELD STRING]
FieldDef 003b[00000b58] [Flags: 00000016] Dpws.Device.Device.ThisModel::ManufacturerUrl [FIELD STRING]
FieldDef 003c[00000b60] [Flags: 00000016] Dpws.Device.Device.ThisModel::ModelName [FIELD STRING]
FieldDef 003d[00000b68] [Flags: 00000016] Dpws.Device.Device.ThisModel::ModelNumber [FIELD STRING]
FieldDef 003e[00000b70] [Flags: 00000016] Dpws.Device.Device.ThisModel::ModelUrl [FIELD STRING]
FieldDef 003f[00000b78] [Flags: 00000016] Dpws.Device.Device.ThisModel::PresentationUrl [FIELD STRING]
FieldDef 0040[00000b80] [Flags: 00000016] Dpws.Device.Device.ThisModel::Any [FIELD CLASS [01000006]]

MethodDef 0000[00000b88] [Flags: 00000496] [RVA: 0000] Dpws.Device.Device::get_Started [METHOD BOOLEAN()]
MethodDef 0001[00000b98] [Flags: 00000496] [RVA: 0004] Dpws.Device.Device::get_HostedServices [METHOD CLASS [01000003]()]
MethodDef 0002[00000ba8] [Flags: 00000496] [RVA: 0008] Dpws.Device.Device::get_MaxServiceThreads [METHOD I4()]
MethodDef 0003[00000bb8] [Flags: 00000496] [RVA: 0016] Dpws.Device.Device::set_MaxServiceThreads [METHOD VOID( I4 )]
MethodDef 0004[00000bc8] [Flags: 00000496] [RVA: 002a] Dpws.Device.Device::get_MaxDiscoveryThreads [METHOD I4()]
MethodDef 0005[00000bd8] [Flags: 00000496] [RVA: 0038] Dpws.Device.Device::set_MaxDiscoveryThreads [METHOD VOID( I4 )]
MethodDef 0006[00000be8] [Flags: 00000496] [RVA: 004c] Dpws.Device.Device::get_ProbeMatchDelay [METHOD I4()]
MethodDef 0007[00000bf8] [Flags: 00000496] [RVA: 0050] Dpws.Device.Device::set_ProbeMatchDelay [METHOD VOID( I4 )]
MethodDef 0008[00000c08] [Flags: 00000496] [RVA: 0055] Dpws.Device.Device::get_IgnoreLocalClientRequest [METHOD BOOLEAN()]
MethodDef 0009[00000c18] [Flags: 00000496] [RVA: 0065] Dpws.Device.Device::set_IgnoreLocalClientRequest [METHOD VOID( BOOLEAN )]
MethodDef 000a[00000c28] [Flags: 00000091] [RVA: 0077] Dpws.Device.Device::Init [METHOD VOID()]
MethodDef 000b[00000c38] [Flags: 00000496] [RVA: 0115] Dpws.Device.Device::get_IPV4Address [METHOD STRING()]
MethodDef 000c[00000c48] [Flags: 00000496] [RVA: 0119] Dpws.Device.Device::get_Port [METHOD I4()]
MethodDef 000d[00000c58] [Flags: 00000496] [RVA: 011d] Dpws.Device.Device::set_Port [METHOD VOID( I4 )]
MethodDef 000e[00000c68] [Flags: 00000096] [RVA: 012b] Dpws.Device.Device::Start [METHOD VOID()]
MethodDef 000f[00000c78] [Flags: 00000096] [RVA: 016d] Dpws.Device.Device::Stop [METHOD VOID()]
MethodDef 0010[00000c88] [Flags: 00000496] [RVA: 0188] Dpws.Device.Device::get_MetadataVersion [METHOD I4()]
MethodDef 0011[00000c98] [Flags: 00000496] [RVA: 018c] Dpws.Device.Device::set_MetadataVersion [METHOD VOID( I4 )]
MethodDef 0012[00000ca8] [Flags: 00000496] [RVA: 0191] Dpws.Device.Device::get_EndpointAddress [METHOD STRING()]
MethodDef 0013[00000cb8] [Flags: 40000496] [RVA: 0195] Dpws.Device.Device::set_EndpointAddress [METHOD VOID( STRING )]
MethodDef 0014[00000cc8] [Flags: 00000493] [RVA: 01ff] Dpws.Device.Device::get_TransportAddress [METHOD STRING()]
MethodDef 0015[00000cd8] [Flags: 40000493] [RVA: 0203] Dpws.Device.Device::get_AppSequence [METHOD STRING()]
MethodDef 0016[00000ce8] [Flags: 40000493] [RVA: 022f] Dpws.Device.Device::get_MessageID [METHOD STRING()]
MethodDef 0017[00000cf8] [Flags: 00000091] [RVA: 025d] Dpws.Device.Device::SetAppSequence [METHOD STRING()]
MethodDef 0018[00000d08] [Flags: 00000496] [RVA: 0291] Dpws.Device.Device::get_SupressAdhoc [METHOD BOOLEAN()]
MethodDef 0019[00000d18] [Flags: 00000496] [RVA: 0295] Dpws.Device.Device::set_SupressAdhoc [METHOD VOID( BOOLEAN )]
MethodDef 001a[00000d28] [Flags: 00000496] [RVA: 029a] Dpws.Device.Device::get_DiscoVersion [METHOD CLASS [04000001]()]
MethodDef 001b[00000d38] [Flags: 00000496] [RVA: 029e] Dpws.Device.Device::set_DiscoVersion [METHOD VOID( CLASS [04000001] )]
MethodDef 001c[00000d48] [Flags: 00002491] [RVA: 02af] Dpws.Device.Device::.cctor [METHOD VOID()]
MethodDef 001d[00000d58] [Flags: 000007c6] [RVA: ffff] Dpws.Device.Discovery.DiscoveryVersion::get_Version [METHOD R8()]
MethodDef 001e[00000d68] [Flags: 000007c6] [RVA: ffff] Dpws.Device.Discovery.DiscoveryVersion::get_WellKnownAddress [METHOD STRING()]
MethodDef 001f[00000d78] [Flags: 000007c6] [RVA: ffff] Dpws.Device.Discovery.DiscoveryVersion::get_Namespace [METHOD STRING()]
MethodDef 0020[00000d88] [Flags: 00001484] [RVA: 031a] Dpws.Device.Discovery.DiscoveryVersion::.ctor [METHOD VOID()]
MethodDef 0021[00000d98] [Flags: 000004c6] [RVA: 031f] Dpws.Device.Discovery.DiscoveryVersion10::get_Version [METHOD R8()]
MethodDef 0022[00000da8] [Flags: 000004c6] [RVA: 0329] Dpws.Device.Discovery.DiscoveryVersion10::get_WellKnownAddress [METHOD STRING()]
MethodDef 0023[00000db8] [Flags: 000004c6] [RVA: 032d] Dpws.Device.Discovery.DiscoveryVersion10::get_Namespace [METHOD STRING()]
MethodDef 0024[00000dc8] [Flags: 00001486] [RVA: 0331] Dpws.Device.Discovery.DiscoveryVersion10::.ctor [METHOD VOID()]
MethodDef 0025[00000dd8] [Flags: 000004c6] [RVA: 033c] Dpws.Device.Discovery.DiscoveryVersion11::get_Version [METHOD R8()]
MethodDef 0026[00000de8] [Flags: 000004c6] [RVA: 0346] Dpws.Device.Discovery.DiscoveryVersion11::get_WellKnownAddress [METHOD STRING()]
MethodDef 0027[00000df8] [Flags: 000004c6] [RVA: 034a] Dpws.Device.Discovery.DiscoveryVersion11::get_Namespace [METHOD STRING()]
MethodDef 0028[00000e08] [Flags: 00001486] [RVA: 034e] Dpws.Device.Discovery.DiscoveryVersion11::.ctor [METHOD VOID()]
MethodDef 0029[00000e18] [Flags: 000005e6] [RVA: 0359] Dpws.Device.Services.DpwsHostedService::get_ServiceOperations [METHOD CLASS [01000008]()]
MethodDef 002a[00000e28] [Flags: 000005e6] [RVA: 035e] Dpws.Device.Services.DpwsHostedService::get_BodyParts [METHOD CLASS [0100000a]()]
MethodDef 002b[00000e38] [Flags: 000005e6] [RVA: 0363] Dpws.Device.Services.DpwsHostedService::set_BodyParts [METHOD VOID( CLASS [0100000a] )]
MethodDef 002c[00000e48] [Flags: 000005e6] [RVA: 0369] Dpws.Device.Services.DpwsHostedService::get_MessageType [METHOD VALUETYPE [0100000b]()]
MethodDef 002d[00000e58] [Flags: 000005e6] [RVA: 036e] Dpws.Device.Services.DpwsHostedService::set_MessageType [METHOD VOID( VALUETYPE [0100000b] )]
MethodDef 002e[00000e68] [Flags: 000005e6] [RVA: 0374] Dpws.Device.Services.DpwsHostedService::get_EndpointAddress [METHOD STRING()]
MethodDef 002f[00000e78] [Flags: 400005e6] [RVA: 0379] Dpws.Device.Services.DpwsHostedService::set_EndpointAddress [METHOD VOID( STRING )]
MethodDef 0030[00000e88] [Flags: 000005e1] [RVA: 03b1] Dpws.Device.Services.DpwsHostedService::Ws.Services.IWsServiceEndpoint.get_BlockingCall [METHOD BOOLEAN()]
MethodDef 0031[00000e98] [Flags: 000005e1] [RVA: 03b6] Dpws.Device.Services.DpwsHostedService::Ws.Services.IWsServiceEndpoint.set_BlockingCall [METHOD VOID( BOOLEAN )]
MethodDef 0032[00000ea8] [Flags: 400001e1] [RVA: 03bc] Dpws.Device.Services.DpwsHostedService::Ws.Services.IWsServiceEndpoint.ProcessRequest [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0033[00000eb8] [Flags: 00001486] [RVA: 03ef] Dpws.Device.Services.DpwsHostedService::.ctor [METHOD VOID()]
MethodDef 0034[00000ec8] [Flags: 00000486] [RVA: 0415] Dpws.Device.Services.DpwsHostedService::get_EndpointRefs [METHOD CLASS [01000007]()]
MethodDef 0035[00000ed8] [Flags: 00000486] [RVA: 041a] Dpws.Device.Services.DpwsHostedService::get_EventSources [METHOD CLASS [0400000f]()]
MethodDef 0036[00000ee8] [Flags: 00000486] [RVA: 041f] Dpws.Device.Services.DpwsHostedService::set_EventSources [METHOD VOID( CLASS [0400000f] )]
MethodDef 0037[00000ef8] [Flags: 00000486] [RVA: 0425] Dpws.Device.Services.DpwsHostedService::get_ServiceTypeName [METHOD STRING()]
MethodDef 0038[00000f08] [Flags: 00000486] [RVA: 043b] Dpws.Device.Services.DpwsHostedService::set_ServiceTypeName [METHOD VOID( STRING )]
MethodDef 0039[00000f18] [Flags: 00000486] [RVA: 0441] Dpws.Device.Services.DpwsHostedService::get_ServiceNamespace [METHOD CLASS [01000009]()]
MethodDef 003a[00000f28] [Flags: 00000486] [RVA: 04ae] Dpws.Device.Services.DpwsHostedService::set_ServiceNamespace [METHOD VOID( CLASS [01000009] )]
MethodDef 003b[00000f38] [Flags: 00000486] [RVA: 04c4] Dpws.Device.Services.DpwsHostedService::get_ServiceID [METHOD STRING()]
MethodDef 003c[00000f48] [Flags: 00000486] [RVA: 04c9] Dpws.Device.Services.DpwsHostedService::set_ServiceID [METHOD VOID( STRING )]
MethodDef 003d[00000f58] [Flags: 00000081] [RVA: 04ed] Dpws.Device.Services.DpwsHostedService::AddEndpoints [METHOD VOID( STRING )]
MethodDef 003e[00000f68] [Flags: 00000081] [RVA: 053b] Dpws.Device.Services.DpwsHostedService::ProcessRequest [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 003f[00000f78] [Flags: 00000086] [RVA: 0613] Dpws.Device.Services.DpwsHostedService::Subscribe [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0040[00000f88] [Flags: 00000086] [RVA: 061f] Dpws.Device.Services.DpwsHostedService::Unsubscribe [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0041[00000f98] [Flags: 00000086] [RVA: 062b] Dpws.Device.Services.DpwsHostedService::Renew [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0042[00000fa8] [Flags: 00000086] [RVA: 0637] Dpws.Device.Services.DpwsHostedService::GetStatus [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0043[00000fb8] [Flags: 00000081] [RVA: 0643] Dpws.Device.Services.DpwsHostedService::GetStatusResponse [METHOD SZARRAY U1( CLASS [0100000c], I8 )]
MethodDef 0044[00000fc8] [Flags: 00002491] [RVA: 06a3] Dpws.Device.Services.DpwsHostedService::.cctor [METHOD VOID()]
MethodDef 0045[00000fd8] [Flags: 00001486] [RVA: 06a4] Dpws.Device.Discovery.DpwsDeviceDiscoService::.ctor [METHOD VOID()]
MethodDef 0046[00000fe8] [Flags: 00000081] [RVA: 06ad] Dpws.Device.Discovery.DpwsDeviceDiscoService::Init [METHOD VOID()]
MethodDef 0047[00000ff8] [Flags: 00000086] [RVA: 06ee] Dpws.Device.Discovery.DpwsDeviceDiscoService::Probe [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0048[00001008] [Flags: 00000086] [RVA: 0834] Dpws.Device.Discovery.DpwsDeviceDiscoService::Resolve [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0049[00001018] [Flags: 000001c6] [RVA: 0844] Dpws.Device.Discovery.DpwsDeviceDiscovery::ProbeMatch [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 004a[00001028] [Flags: 000001c6] [RVA: 096c] Dpws.Device.Discovery.DpwsDeviceDiscovery::ResolveMatch [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 004b[00001038] [Flags: 00000081] [RVA: 0a90] Dpws.Device.Discovery.DpwsDeviceDiscovery::WriteDeviceServiceTypes [METHOD VOID( CLASS [0100000f] )]
MethodDef 004c[00001048] [Flags: 00001486] [RVA: 0abf] Dpws.Device.Discovery.DpwsDeviceDiscovery::.ctor [METHOD VOID()]
MethodDef 004d[00001058] [Flags: 00000096] [RVA: 0ac4] Dpws.Device.Discovery.DpwsDiscoGreeting::SendGreetingMessage [METHOD VOID( BOOLEAN )]
MethodDef 004e[00001068] [Flags: 00000093] [RVA: 0b97] Dpws.Device.Discovery.DpwsDiscoGreeting::BuildHelloMessage [METHOD SZARRAY U1( STRING, CLASS [0100000c], CLASS [0100000d] )]
MethodDef 004f[00001078] [Flags: 00000091] [RVA: 0c75] Dpws.Device.Discovery.DpwsDiscoGreeting::WriteDeviceServiceTypes [METHOD VOID( CLASS [0100000f], BOOLEAN )]
MethodDef 0050[00001088] [Flags: 00000091] [RVA: 0cab] Dpws.Device.Discovery.DpwsDiscoGreeting::WriteHostedServiceTypes [METHOD VOID( CLASS [0100000f] )]
MethodDef 0051[00001098] [Flags: 00000093] [RVA: 0d15] Dpws.Device.Discovery.DpwsDiscoGreeting::BuildByeMessage [METHOD SZARRAY U1( STRING, CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0052[000010a8] [Flags: 00000086] [RVA: 0da8] Dpws.Device.Discovery.ManagedDiscovery::DirectedHello [METHOD VOID( STRING )]
MethodDef 0053[000010b8] [Flags: 00000086] [RVA: 0dbd] Dpws.Device.Discovery.ManagedDiscovery::DirectedBye [METHOD VOID( STRING )]
MethodDef 0054[000010c8] [Flags: 00001486] [RVA: 0dd2] Dpws.Device.Discovery.ManagedDiscovery::.ctor [METHOD VOID()]
MethodDef 0055[000010d8] [Flags: 00001486] [RVA: 0dd7] Dpws.Device.Mex.DpwsDeviceMexService::.ctor [METHOD VOID()]
MethodDef 0056[000010e8] [Flags: 00000081] [RVA: 0de0] Dpws.Device.Mex.DpwsDeviceMexService::Init [METHOD VOID()]
MethodDef 0057[000010f8] [Flags: 00000086] [RVA: 0e0d] Dpws.Device.Mex.DpwsDeviceMexService::Get [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0058[00001108] [Flags: 00000086] [RVA: 0e18] Dpws.Device.Mex.DpwsWsxMetdataResponse::GetResponse [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d] )]
MethodDef 0059[00001118] [Flags: 00000081] [RVA: 1280] Dpws.Device.Mex.DpwsWsxMetdataResponse::BuildServiceTypesList [METHOD STRING( CLASS [04000004], CLASS [01000010] )]
MethodDef 005a[00001128] [Flags: 00001486] [RVA: 131b] Dpws.Device.Mex.DpwsWsxMetdataResponse::.ctor [METHOD VOID()]
MethodDef 005b[00001138] [Flags: 00000486] [RVA: 1320] Dpws.Device.Services.DpwsWseEventSink::get_ID [METHOD STRING()]
MethodDef 005c[00001148] [Flags: 00000486] [RVA: 1325] Dpws.Device.Services.DpwsWseEventSink::set_ID [METHOD VOID( STRING )]
MethodDef 005d[00001158] [Flags: 00000486] [RVA: 132b] Dpws.Device.Services.DpwsWseEventSink::get_EndTo [METHOD CLASS [01000011]()]
MethodDef 005e[00001168] [Flags: 00000486] [RVA: 1330] Dpws.Device.Services.DpwsWseEventSink::set_EndTo [METHOD VOID( CLASS [01000011] )]
MethodDef 005f[00001178] [Flags: 00000486] [RVA: 1336] Dpws.Device.Services.DpwsWseEventSink::get_NotifyTo [METHOD CLASS [01000011]()]
MethodDef 0060[00001188] [Flags: 00000486] [RVA: 133b] Dpws.Device.Services.DpwsWseEventSink::set_NotifyTo [METHOD VOID( CLASS [01000011] )]
MethodDef 0061[00001198] [Flags: 00000486] [RVA: 1341] Dpws.Device.Services.DpwsWseEventSink::get_Expires [METHOD I8()]
MethodDef 0062[000011a8] [Flags: 00000486] [RVA: 1346] Dpws.Device.Services.DpwsWseEventSink::set_Expires [METHOD VOID( I8 )]
MethodDef 0063[000011b8] [Flags: 00000486] [RVA: 134c] Dpws.Device.Services.DpwsWseEventSink::get_Filters [METHOD SZARRAY STRING()]
MethodDef 0064[000011c8] [Flags: 00000486] [RVA: 1351] Dpws.Device.Services.DpwsWseEventSink::set_Filters [METHOD VOID( SZARRAY STRING )]
MethodDef 0065[000011d8] [Flags: 00000486] [RVA: 1357] Dpws.Device.Services.DpwsWseEventSink::get_StartTime [METHOD I8()]
MethodDef 0066[000011e8] [Flags: 00000486] [RVA: 135c] Dpws.Device.Services.DpwsWseEventSink::set_StartTime [METHOD VOID( I8 )]
MethodDef 0067[000011f8] [Flags: 00001486] [RVA: 1362] Dpws.Device.Services.DpwsWseEventSink::.ctor [METHOD VOID()]
MethodDef 0068[00001208] [Flags: 00001486] [RVA: 1367] Dpws.Device.Services.DpwsWseEventSinkQMgr::.ctor [METHOD VOID()]
MethodDef 0069[00001218] [Flags: 00000086] [RVA: 136c] Dpws.Device.Services.DpwsWseEventSinkQMgr::Start [METHOD VOID()]
MethodDef 006a[00001228] [Flags: 00000086] [RVA: 1389] Dpws.Device.Services.DpwsWseEventSinkQMgr::Stop [METHOD VOID()]
MethodDef 006b[00001238] [Flags: 40000086] [RVA: 1394] Dpws.Device.Services.DpwsWseEventSinkQMgr::EventService [METHOD VOID()]
MethodDef 006c[00001248] [Flags: 00001486] [RVA: 1473] Dpws.Device.Services.DpwsWseEventSinks::.ctor [METHOD VOID()]
MethodDef 006d[00001258] [Flags: 00000486] [RVA: 1486] Dpws.Device.Services.DpwsWseEventSinks::get_Count [METHOD I4()]
MethodDef 006e[00001268] [Flags: 00000486] [RVA: 148e] Dpws.Device.Services.DpwsWseEventSinks::get_Item [METHOD CLASS [0400000b]( I4 )]
MethodDef 006f[00001278] [Flags: 40000486] [RVA: 149a] Dpws.Device.Services.DpwsWseEventSinks::get_Item [METHOD CLASS [0400000b]( STRING )]
MethodDef 0070[00001288] [Flags: 40000086] [RVA: 14eb] Dpws.Device.Services.DpwsWseEventSinks::Add [METHOD I4( CLASS [0400000b] )]
MethodDef 0071[00001298] [Flags: 40000086] [RVA: 1558] Dpws.Device.Services.DpwsWseEventSinks::Clear [METHOD VOID()]
MethodDef 0072[000012a8] [Flags: 40000086] [RVA: 157d] Dpws.Device.Services.DpwsWseEventSinks::Remove [METHOD VOID( CLASS [0400000b] )]
MethodDef 0073[000012b8] [Flags: 00001486] [RVA: 15a3] Dpws.Device.Services.DpwsWseEventSource::.ctor [METHOD VOID( STRING, STRING, STRING )]
MethodDef 0074[000012c8] [Flags: 00000486] [RVA: 15eb] Dpws.Device.Services.DpwsWseEventSource::get_Name [METHOD STRING()]
MethodDef 0075[000012d8] [Flags: 00000486] [RVA: 15f0] Dpws.Device.Services.DpwsWseEventSource::set_Name [METHOD VOID( STRING )]
MethodDef 0076[000012e8] [Flags: 00000486] [RVA: 15f6] Dpws.Device.Services.DpwsWseEventSource::get_Prefix [METHOD STRING()]
MethodDef 0077[000012f8] [Flags: 00000486] [RVA: 15fb] Dpws.Device.Services.DpwsWseEventSource::set_Prefix [METHOD VOID( STRING )]
MethodDef 0078[00001308] [Flags: 00000486] [RVA: 1601] Dpws.Device.Services.DpwsWseEventSource::get_NamespaceURI [METHOD STRING()]
MethodDef 0079[00001318] [Flags: 00000486] [RVA: 1606] Dpws.Device.Services.DpwsWseEventSource::set_NamespaceURI [METHOD VOID( STRING )]
MethodDef 007a[00001328] [Flags: 00000486] [RVA: 160c] Dpws.Device.Services.DpwsWseEventSource::get_Operation [METHOD STRING()]
MethodDef 007b[00001338] [Flags: 00000486] [RVA: 1611] Dpws.Device.Services.DpwsWseEventSource::set_Operation [METHOD VOID( STRING )]
MethodDef 007c[00001348] [Flags: 00000483] [RVA: 1617] Dpws.Device.Services.DpwsWseEventSource::get_EventSinks [METHOD CLASS [0400000d]()]
MethodDef 007d[00001358] [Flags: 00000483] [RVA: 161c] Dpws.Device.Services.DpwsWseEventSource::set_EventSinks [METHOD VOID( CLASS [0400000d] )]
MethodDef 007e[00001368] [Flags: 00001486] [RVA: 1622] Dpws.Device.Services.DpwsWseEventSources::.ctor [METHOD VOID()]
MethodDef 007f[00001378] [Flags: 00000486] [RVA: 1635] Dpws.Device.Services.DpwsWseEventSources::get_Count [METHOD I4()]
MethodDef 0080[00001388] [Flags: 00000486] [RVA: 163d] Dpws.Device.Services.DpwsWseEventSources::get_Item [METHOD CLASS [0400000e]( I4 )]
MethodDef 0081[00001398] [Flags: 40000486] [RVA: 1649] Dpws.Device.Services.DpwsWseEventSources::get_Item [METHOD CLASS [0400000e]( STRING )]
MethodDef 0082[000013a8] [Flags: 40000086] [RVA: 16a4] Dpws.Device.Services.DpwsWseEventSources::Add [METHOD I4( CLASS [0400000e] )]
MethodDef 0083[000013b8] [Flags: 00001486] [RVA: 16cc] Dpws.Device.Services.DpwsWseSubscriptionMgr::.ctor [METHOD VOID()]
MethodDef 0084[000013c8] [Flags: 40000086] [RVA: 16d8] Dpws.Device.Services.DpwsWseSubscriptionMgr::FireEvent [METHOD VOID( CLASS [04000004], CLASS [0400000e], CLASS [0100000c], STRING )]
MethodDef 0085[000013d8] [Flags: 00000081] [RVA: 17f3] Dpws.Device.Services.DpwsWseSubscriptionMgr::SendEvent [METHOD VOID( SZARRAY U1, STRING )]
MethodDef 0086[000013e8] [Flags: 00000081] [RVA: 1820] Dpws.Device.Services.DpwsWseSubscriptionMgr::SendSubscriptionEnd [METHOD VOID( CLASS [0400000b], STRING, STRING )]
MethodDef 0087[000013f8] [Flags: 00000081] [RVA: 1873] Dpws.Device.Services.DpwsWseSubscriptionMgr::SubscriptionEndResponse [METHOD SZARRAY U1( CLASS [0400000b], STRING, STRING )]
MethodDef 0088[00001408] [Flags: 00000083] [RVA: 1950] Dpws.Device.Services.DpwsWseSubscriptionMgr::FixToAddress [METHOD STRING( STRING )]
MethodDef 0089[00001418] [Flags: 40000083] [RVA: 19c5] Dpws.Device.Services.DpwsWseSubscriptionMgr::Subscribe [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d], CLASS [01000003] )]
MethodDef 008a[00001428] [Flags: 00000086] [RVA: 1ce8] Dpws.Device.Services.DpwsWseSubscriptionMgr::Unsubscribe [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d], CLASS [01000003] )]
MethodDef 008b[00001438] [Flags: 40000086] [RVA: 1df0] Dpws.Device.Services.DpwsWseSubscriptionMgr::Renew [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d], CLASS [01000003] )]
MethodDef 008c[00001448] [Flags: 00000086] [RVA: 1ebd] Dpws.Device.Services.DpwsWseSubscriptionMgr::GetStatus [METHOD SZARRAY U1( CLASS [0100000c], CLASS [0100000d], CLASS [01000003] )]
MethodDef 008d[00001458] [Flags: 00000081] [RVA: 1f3c] Dpws.Device.Services.DpwsWseSubscriptionMgr::GetEventSink [METHOD CLASS [0400000b]( CLASS [0400000f], STRING )]
MethodDef 008e[00001468] [Flags: 00000081] [RVA: 1f61] Dpws.Device.Services.DpwsWseSubscriptionMgr::GetStatusResponse [METHOD SZARRAY U1( CLASS [0100000c], I8 )]
MethodDef 008f[00001478] [Flags: 00002491] [RVA: 1fc1] Dpws.Device.Device.ThisDevice::.cctor [METHOD VOID()]
MethodDef 0090[00001488] [Flags: 00002491] [RVA: 1fc2] Dpws.Device.Device.ThisModel::.cctor [METHOD VOID()]
