#include <tinyhal.h>

#include <VirtualTimer.h>
// Defines the packet format
class RadioPacket
{

};



extern "C"
{

void Timer_1_Callback(void *args)
{

}

void Timer_2_Callback(void *args)
{

}

BOOL mySFDEventHandler(void *data)
{

}


BOOL myEFDEventHandler(void *data)
{

}


struct IRadioEvents eventHandlers =
{
		&mySFDEventHandler,
		&myEFDEventHandler,
};


void OMAC_Init()
{
	Radio_AddEventHandlers(&eventHandlers);

	void *packet = NULL;

	if(TRUE == Radio_LoadPacket(packet))
	{
		Radio_SendPacket();
	}

	RadioPacket radioPacket;

	// This function assumes that there is an interface provided by the RadioPacket class that tells where the timestamp field is
	// in the packet, like a getMetaDataLength function
	TimeStampLayer<RadioPacket>::set(&radioPacket);

	gVirtualTimerManagerObject.createTimer(1,0,2000, FALSE, FALSE,Timer_1_Callback);
	gVirtualTimerManagerObject.createTimer(2,0,1000, FALSE, FALSE,Timer_2_Callback);

}









}
