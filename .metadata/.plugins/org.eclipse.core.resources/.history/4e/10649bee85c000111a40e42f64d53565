/*
 *
 *  Name : PriorityQueue.h
 *
 *  Author : nived.sivadas@samraksh.com
 *
 *  Description :
 *
 *
 */
#ifndef _PRIORITY_QUEUE_H_
#define _PRIORITY_QUEUE_H_


#define PQSIZE 32


// Min element in front of the queue
template <class T>
class PriorityQueue
{
	// Body of the queue
	T queue[PQSIZE + 1];

	// Number of elements in the queue
	INT32 numberOfElements;

	VOID ReorderUp(INT32 elementID);


	VOID ReorderDown(INT32 elementID);


	INT32 parent(INT32 elementId);


	INT32 child(INT32 elementId);


public:
	PriorityQueue()
	{
		numberOfElements = 0;
	}

	// Adds a new element to the priority queue, takes the element as argument
	BOOL enqueue(T item)


	T getMin()
	{
		return queue[0];
	}

	T extractMin()
	{
		T min;

		min = queue[0];

		queue[0] = queue[numberOfElements - 1];

		ReorderDown(0);

		return min;
	}

};



#endif
