/*
 * 	Name : VirtualTimer.h
 *
 *  Author : nived.sivadas@samraksh.com
 *
 *  Description : Contains a structure that defines the virtual timer and the manager class that is responsible for
 *  			  interfacing the virtual timer with the hardware timer
 *
 */



#ifndef _VIRTUAL_TIMER_H_
#define _VIRTUAL_TIMER_H_

#include <tinyhal.h>


#define NUM_VIRTUAL_TIMERS 32


typedef void (*TIMER_CALLBACK_FPN)( void* arg );


class VirtualTimer
{
	UINT32 startTime;
	UINT32 dTime;
	BOOL   isOneShot;
	BOOL   isRunning;
	BOOL   _reserved;
	TIMER_CALLBACK_FPN callBack;
};

class VirtualTimerManager
{
	VirtualTimer m_timer[NUM_VIRTUAL_TIMERS];

	static int currentTimer;

	BOOL reclaimTimer();

public:
	BOOL createTimer(UINT32 startTime, UINT32 dTime, UINT32 isOneShot, UINT32 isRunning, BOOL _reserved,TIMER_CALLBACK_FPN callBack);



};

VirtualTimerManager gVirtualTimerManagerObject;


#endif
